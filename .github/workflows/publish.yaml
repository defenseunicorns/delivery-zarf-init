name: release

on:
  push:
    branches:
      - main
    paths:
      - "zarf.yaml"
      - "zarf-config.yaml"
  workflow_dispatch:

env:
    # renovate: datasource=docker depName=registry1.dso.mil/ironbank/opensource/defenseunicorns/zarf/zarf-agent
    ZARF_VERSION: v0.51.0

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # needed for ghcr access
    strategy:
      matrix:
        flavor:
          - ""
          - gitea-registry1
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to registry1
        uses: docker/login-action@v3
        with:
          registry: registry1.dso.mil
          username: ${{ secrets.IRON_BANK_ROBOT_USERNAME }}
          password: ${{ secrets.IRON_BANK_ROBOT_PASSWORD }}
      - name: Install Zarf
        uses: defenseunicorns/setup-zarf@main
        with:
          version: ${{ env.ZARF_VERSION }}
          download-init-package: false
      - name: Build and Publish IB Package
        run: |
          if [[ "${{ matrix.flavor }}" == "" ]]; then
            # Run without the flavor flag for the default package
            echo "Creating default package (no flavor)..."
            zarf package create --confirm --output oci://ghcr.io/defenseunicorns/delivery-zarf-init --no-progress

            # Retag with better logging and error handling
            echo "================================"
            echo "Starting retagging operation for registry1..."
            echo "Source: ghcr.io/defenseunicorns/delivery-zarf-init/init:${ZARF_VERSION}"
            echo "Target: ghcr.io/defenseunicorns/delivery-zarf-init/init:${ZARF_VERSION}-registry1"
            echo "================================"

            if zarf tools registry copy ghcr.io/defenseunicorns/delivery-zarf-init/init:${ZARF_VERSION} ghcr.io/defenseunicorns/delivery-zarf-init/init:${ZARF_VERSION}-registry1; then
              echo "✅ Retagging SUCCESSFUL"
            else
              echo "❌ Retagging FAILED with exit code $?"
              echo "Check for errors above. You may need to run with -v flag for more details."
              exit 1
            fi
            echo "================================"
          else
            # Run with the flavor flag for the specific flavor
            echo "Creating package with flavor: ${{ matrix.flavor }}..."
            zarf package create --confirm --output oci://ghcr.io/defenseunicorns/delivery-zarf-init --no-progress --flavor ${{ matrix.flavor }}
          fi
