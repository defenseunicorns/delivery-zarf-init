{{- if .Values.autoscaling.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ template "docker-registry.fullname" . }}
  labels:
    app: {{ template "docker-registry.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ template "docker-registry.fullname" . }}
{{- if .Values.autoscaling.mapReplicasToNodes }}
  minReplicas: {{ len (lookup "v1" "Node" "" "") }}
  maxReplicas: {{ add (len (lookup "v1" "Node" "" "")) 4 }}
{{- else }}
  minReplicas: {{ .Values.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.autoscaling.maxReplicas }}
{{- end }}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.autoscaling.targetCPUUtilizationPercentage }}
  behavior:
    scaleDown:
      # Use 60 second stabilization window becuase zarf will freeze scale down during deploys
      stabilizationWindowSeconds: 60
      # Initially disable scale down - this gets set to Min later by Zarf (src/test/e2e/20_zarf_init_test.go)
      selectPolicy: Disabled
      # Scale down one pod per minute
      policies:
        - type: Pods
          value: 1
          periodSeconds: 60
    scaleUp:
      # Delay initial checks by 30 seconds
      stabilizationWindowSeconds: 30
      # Scale up as much as is needed
      selectPolicy: Max
      # Scale up one pod per minute
      policies:
        - type: Pods
          value: 1
          periodSeconds: 60
{{- end }}
